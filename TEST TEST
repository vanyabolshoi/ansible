---
- name: Проверка доступности Windows-хостов
  hosts: windows
  gather_facts: no
  tasks:
    - name: Проверка ICMP доступности
      ansible.windows.win_shell: |
        Test-Connection -ComputerName $env:COMPUTERNAME -Count 1 -Quiet
      register: icmp_check
      ignore_errors: yes

    - name: Проверка WinRM
      win_ping:
      register: winrm_check
      ignore_errors: yes
      when: icmp_check.rc == 0 or icmp_check.stdout == "True"

    - name: Классификация — все супер
      set_fact:
        status: "Все супер"
      when: winrm_check.ping is defined and winrm_check.ping == "pong"

    - name: Классификация — доступен, но управление невозможно
      set_fact:
        status: "Доступен, но управление невозможно"
      when:
        - (icmp_check.rc == 0 or icmp_check.stdout == "True")
        - status is not defined

    - name: Классификация — недоступен априори
      set_fact:
        status: "Недоступен априори"
      when:
        - status is not defined

    - name: Сохранить статус
      set_fact:
        host_statuses: "{{ host_statuses | default({}) | combine({inventory_hostname: status}) }}"
      run_once: true
      delegate_to: localhost

- name: Вывод статистики
  hosts: localhost
  gather_facts: no
  vars:
    host_statuses: "{{ hostvars | dict2items | selectattr('value.host_statuses', 'defined') | map(attribute='value.host_statuses') | first }}"
  tasks:
    - name: Все супер
      debug:
        msg: "{{ host_statuses | dict2items | selectattr('value', 'equalto', 'Все супер') | map(attribute='key') | list }}"
    - name: Доступен, но управление невозможно
      debug:
        msg: "{{ host_statuses | dict2items | selectattr('value', 'equalto', 'Доступен, но управление невозможно') | map(attribute='key') | list }}"
    - name: Недоступен априори
      debug:
        msg: "{{ host_statuses | dict2items | selectattr('value', 'equalto', 'Недоступен априори') | map(attribute='key') | list }}"
