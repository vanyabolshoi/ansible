---
- name: Проверка доступности Windows-хостов
  hosts: windows
  gather_facts: no
  tasks:
    - name: Проверка ICMP
      win_shell: |
        Test-Connection -ComputerName $env:COMPUTERNAME -Count 1 -Quiet
      register: icmp_check
      ignore_errors: yes

    - name: Проверка WinRM
      win_ping:
      register: winrm_check
      ignore_errors: yes
      when: icmp_check.rc == 0 or icmp_check.stdout == "True"

    - name: Присвоить статус
      set_fact:
        status: >-
          {% if winrm_check.ping is defined and winrm_check.ping == "pong" %}
            super
          {% elif icmp_check.rc == 0 or icmp_check.stdout == "True" %}
            no_manage
          {% else %}
            unreachable
          {% endif %}

    - name: Сохранить статус
      set_fact:
        host_statuses: "{{ host_statuses | default({}) | combine({inventory_hostname: status}) }}"
      run_once: true
      delegate_to: localhost

- name: Итоговая статистика
  hosts: localhost
  gather_facts: no
  vars:
    host_statuses: "{{ hostvars | dict2items | selectattr('value.host_statuses', 'defined') | map(attribute='value.host_statuses') | first }}"
  tasks:
    - name: Подсчет статистики
      set_fact:
        total: "{{ host_statuses | length }}"
        count_super: "{{ host_statuses | dict2items | selectattr('value', 'equalto', 'super') | list | length }}"
        count_no_manage: "{{ host_statuses | dict2items | selectattr('value', 'equalto', 'no_manage') | list | length }}"
        count_unreachable: "{{ host_statuses | dict2items | selectattr('value', 'equalto', 'unreachable') | list | length }}"

    - name: Вывести статистику
      debug:
        msg: |
          Все супер:  {{ count_super }} ({{ ((count_super | float / total) * 100) | round(1) }}%)
          Доступен, но управление невозможно:  {{ count_no_manage }} ({{ ((count_no_manage | float / total) * 100) | round(1) }}%)
          Недоступен априори:  {{ count_unreachable }} ({{ ((count_unreachable | float / total) * 100) | round(1) }}%)
