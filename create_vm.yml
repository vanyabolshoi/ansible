- name: Создать Autounattend.xml для клона {{ clone_number }}
  template:
    src: templates/autounattend.xml.j2
    dest: "/tmp/autounattend_{{ clone_number }}.xml"

- name: Создать ISO с Autounattend.xml для клона {{ clone_number }}
  command: >
    genisoimage -o /tmp/autounattend_{{ clone_number }}.iso
    -V AUTOUNATTEND -r -J /tmp/autounattend_{{ clone_number }}.xml
  args:
    removes: "/tmp/autounattend_{{ clone_number }}.iso"

- name: Залить ISO в Proxmox через SCP для клона {{ clone_number }}
  ansible.builtin.command: >
    scp /tmp/autounattend_{{ clone_number }}.iso
    root@{{ proxmox_api_host }}:/var/lib/vz/template/iso/autounattend_{{ clone_number }}.iso
  delegate_to: localhost

- name: Создать связанный клон {{ clone_base_name }}{{ clone_number }}
  community.proxmox.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ ansible_user }}"
    api_password: "{{ ansible_password }}"
    validate_certs: false
    node: "{{ node }}"
    name: "{{ clone_base_name }}{{ clone_number }}"
    clone: "{{ template_name }}"
    full: false
    state: present

- name: Присоединить Autounattend ISO к VM {{ clone_base_name }}{{ clone_number }}
  community.proxmox.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ ansible_user }}"
    api_password: "{{ ansible_password }}"
    validate_certs: false
    node: "{{ node }}"
    name: "{{ clone_base_name }}{{ clone_number }}"
    ide2: "local:iso/autounattend_{{ clone_number }}.iso,media=cdrom"
    boot: cd
    bootdisk: scsi0
    state: present

- name: Запустить VM {{ clone_base_name }}{{ clone_number }}
  community.proxmox.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ ansible_user }}"
    api_password: "{{ ansible_password }}"
    validate_certs: false
    node: "{{ node }}"
    name: "{{ clone_base_name }}{{ clone_number }}"
    state: started
