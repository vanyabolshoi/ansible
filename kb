---
- name: Проверить KB и вывести IP всех подходящих хостов
  hosts: windows
  gather_facts: yes

  vars:
    results: []

  tasks:
    - name: Получить ProductName Windows
      win_shell: |
        (Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' -Name ProductName).ProductName
      register: product_name
      changed_when: false

    - name: Нормализовать ProductName
      set_fact:
        product_name_clean: "{{ product_name.stdout | default('') | trim() | lower() }}"

    - name: Проверить наличие KB для Windows 10
      win_shell: |
        try { (Get-HotFix -Id KB5066791 -ErrorAction Stop).HotFixID } catch { '' }
      register: kb10
      changed_when: false
      when: "'windows 10' in product_name_clean"

    - name: Проверить наличие KB для Windows 11
      win_shell: |
        try { (Get-HotFix -Id KB5066793 -ErrorAction Stop).HotFixID } catch { '' }
      register: kb11
      changed_when: false
      when: "'windows 11' in product_name_clean"

    - name: Сохранить результат, если найден нужный KB
      set_fact:
        kb_match: true
      when: >
        ('windows 10' in product_name_clean and kb10.stdout | trim != '') or
        ('windows 11' in product_name_clean and kb11.stdout | trim != '')

    - name: Сохранить IP подходящего хоста
      set_fact:
        matched_ip: "{{ ansible_facts.ansible_default_ipv4.address }}"
      when: kb_match is defined and kb_match

    - name: Собрать IP всех подходящих хостов
      add_host:
        name: "{{ inventory_hostname }}"
        groups: matched_hosts
        ip: "{{ matched_ip }}"
      when: matched_ip is defined

- name: Вывести итоговый список IP
  hosts: matched_hosts
  gather_facts: no
  tasks:
    - name: Показать IP всех хостов, у которых найден нужный KB
      debug:
        msg: "{{ inventory_hostname }} -> {{ hostvars[inventory_hostname]['ip'] }}"
  run_once: true
