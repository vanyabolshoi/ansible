---
- name: Проверить Windows 11 и наличие KB5066793
  hosts: windows
  gather_facts: no
  any_errors_fatal: false

  tasks:
    - name: Проверить доступность хоста (таймаут 5 сек)
      wait_for_connection:
        timeout: 5
      register: ping_status
      ignore_errors: true

    - name: Пропустить недоступные хосты
      meta: end_host
      when: ping_status is failed

    - name: Получить ProductName Windows
      win_shell: |
        (Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' -Name ProductName).ProductName
      register: product_name
      changed_when: false

    - name: Нормализовать ProductName
      set_fact:
        product_name_clean: "{{ product_name.stdout | default('') | trim() | lower() }}"

    - name: Проверить наличие KB5066793 (только если Windows 11)
      win_shell: |
        try { (Get-HotFix -Id KB5066793 -ErrorAction Stop).HotFixID } catch { '' }
      register: kb11
      changed_when: false
      when: "'windows 11' in product_name_clean"

    - name: Сохранить IP если KB найден
      set_fact:
        matched_ip: "{{ ansible_host }}"
      when: kb11.stdout | trim != ''

    - name: Добавить IP в группу подходящих хостов
      add_host:
        name: "{{ inventory_hostname }}"
        groups: matched_hosts
        ip: "{{ matched_ip }}"
      when: matched_ip is defined

- name: Вывести итоговый список IP
  hosts: matched_hosts
  gather_facts: no
  run_once: true
  tasks:
    - name: Собрать все IP
      set_fact:
        all_ips: "{{ groups['matched_hosts'] | map('extract', hostvars, ['ip']) | select('defined') | list }}"

    - name: Показать IP по одному в строке
      debug:
        msg: "{{ all_ips | join('\n') }}"

    - name: Сохранить IP в файл на контроллере
      local_action:
        module: copy
        content: "{{ all_ips | join('\n') }}"
        dest: /tmp/kb5066793_hosts.txt
